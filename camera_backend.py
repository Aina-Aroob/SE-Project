# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MN4armhu4K4BnamIDMrHeulME-lvvMB9
"""

import cv2
import threading

class CameraManager:
    def __init__(self):
        self.cap = None
        self.is_streaming = False
        self.lock = threading.Lock()

    def initialize_camera(self, resolution='720p', fps=30):
        """Initialize camera with specified settings"""
        resolutions = {
            '480p': (640, 480),
            '720p': (1280, 720),
            '1080p': (1920, 1080)
        }
        width, height = resolutions.get(resolution, (1280, 720))

        with self.lock:
            if self.cap is None or not self.cap.isOpened():
                self.cap = cv2.VideoCapture(0)
                self.cap.set(cv2.CAP_PROP_FRAME_WIDTH, width)
                self.cap.set(cv2.CAP_PROP_FRAME_HEIGHT, height)
                self.cap.set(cv2.CAP_PROP_FPS, fps)

                if not self.cap.isOpened():
                    raise RuntimeError("Could not open camera")
                print(f"Camera initialized at {width}x{height} @ {fps} FPS")
            return self.cap


# Singleton instance
camera_manager = CameraManager()